{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }


	"main": {
		"prefix": "main",
		"body": [
		  "#include <iostream>",
		  "#include <vector>",
		  "#include <set>",
		  "#include <algorithm>",
		  "",
		  "typedef long long ll;",
		  "",
		  "using namespace std;",
		  "",
		  "int main(int argc , char *argv[]) {",
		  "\t$1",
		  "\treturn 0;",
		  "}"
		],
		"description": "main"
	  },

	  "vector": {
		"prefix": "vec",
		"body": [
		  "vector<$int> $vector;\n$0"
		],
		"description": "vector"
		},
		
		"print vector": {
			"prefix": "p vec",
			"body": [
				"cout << \"$vec : \";",
				"for(int $i=0 ; $i < $vec.size() ; ++$i) {",
				"    cout << $vec[$i] << \" \";",
				"}",
				"cout << endl;"
			],
			"description": "print vector"
		},

		"print array": {
			"prefix": "p array",
			"body": [
				"cout << \"$array : \";",
				"for(int $i=0 ; $i < $size ; ++$i) {",
				"    cout << $array[$i] << \" \";",
				"}",
				"cout << endl;"
			],
			"description": "print array"
		},

		"cout": {
			"prefix": "p",
			"body": [
				"cout << $1 << endl;\n$0"
			],
			"description": "cout"
		},

		"cout var" : {
			"prefix": "p var",
			"body": [
				"cout << \"$var : \" <<  $var << endl;\n$0"
			],
			"description": "cout var"
		},

		"cout space" : {
			"prefix" : "ss",
			"body": " << \" \" << ",
			"description": "cout space"
		}
}